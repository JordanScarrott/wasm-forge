name: Publish to npm

# This key makes the workflow triggerable manually from the GitHub UI.
on:
  workflow_dispatch:

  # This adds the new trigger for Git tags
  push:
    tags:
      - 'v*' # e.g., v1.0.0, v0.2.1, etc.

jobs:
  publish-packages:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install the Rust toolchain and build tools
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - name: Install wasm-bindgen
        run: |
          cargo install wasm-bindgen-cli

      # Step 3: Set up Node.js and configure it for npm publishing
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Point to the official npm registry
          registry-url: 'https://registry.npmjs.org'

      # Step 4: Build, package, and publish @wasm-forge/trie
      - name: Build and package @wasm-forge/trie
        run: |
          cargo build --release --target wasm32-unknown-unknown -p trie --target-dir ./crates/trie/target
          wasm-bindgen --target web --out-dir ./crates/trie/pkg ./crates/trie/target/wasm32-unknown-unknown/release/trie.wasm
      - name: Publish @wasm-forge/trie
        run: npm publish --access public ./crates/trie
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Step 5: Build, package, and publish @wasm-forge/levenshtein
      - name: Build and package @wasm-forge/levenshtein
        run: |
          cargo build --release --target wasm32-unknown-unknown -p levenshtein --target-dir ./crates/levenshtein/target
          wasm-bindgen --target web --out-dir ./crates/levenshtein/pkg ./crates/levenshtein/target/wasm32-unknown-unknown/release/levenshtein.wasm
      - name: Publish @wasm-forge/levenshtein
        run: npm publish --access public ./crates/levenshtein
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
